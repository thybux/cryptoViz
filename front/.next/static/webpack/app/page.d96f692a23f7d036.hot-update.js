"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/Chart.tsx":
/*!**********************************!*\
  !*** ./app/components/Chart.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ \"(app-pages-browser)/./node_modules/lightweight-charts/dist/lightweight-charts.development.mjs\");\n/* harmony import */ var _context_CryptoContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/CryptoContext */ \"(app-pages-browser)/./app/context/CryptoContext.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst timeframes = {\n    \"1m\": \"1\",\n    \"5m\": \"5\",\n    \"15m\": \"15\",\n    \"1h\": \"60\"\n};\n// Configurations des indicateurs\nconst indicators = {\n    MA: {\n        periods: [\n            20,\n            50,\n            200\n        ],\n        colors: [\n            \"#ff6b6b\",\n            \"#4ecdc4\",\n            \"#45b7d1\"\n        ]\n    },\n    Bollinger: {\n        period: 20,\n        stdDev: 2,\n        color: \"#9775fa\"\n    }\n};\n// Récupérer le dernier prix\nconst latestPrice = async (crypto)=>{\n    let result = await fetch(\"http://10.18.206.239:6060/crypto/latest/\" + crypto);\n    let data = await result.json();\n    data.ohlc.time = new Date(data.timestamp).getTime() / 1000;\n    const newCandle = data.ohlc;\n    return newCandle;\n};\n// Récupérer les données historiques\nconst historyPrice = async (crypto, timeframe)=>{\n    let result = await fetch(\"http://10.18.206.239:6060/crypto/history/\".concat(crypto, \"?timeframe=\").concat(timeframe));\n    let data = await result.json();\n    return data.history.map((candle)=>({\n            time: new Date(candle.timestamp).getTime() / 1000,\n            open: candle.ohlc.open,\n            high: candle.ohlc.high,\n            low: candle.ohlc.low,\n            close: candle.ohlc.close\n        }));\n};\n// Calculer la moyenne mobile (MA)\nconst calculateMA = (data, period)=>{\n    const maData = [];\n    for(let i = 0; i < data.length; i++){\n        if (i < period - 1) {\n            maData.push({\n                time: data[i].time,\n                value: NaN\n            });\n            continue;\n        }\n        const slice = data.slice(i - period + 1, i + 1);\n        const sum = slice.reduce((acc, curr)=>acc + curr.close, 0);\n        const ma = sum / period;\n        maData.push({\n            time: data[i].time,\n            value: ma\n        });\n    }\n    return maData;\n};\n// Calculer les bandes de Bollinger\nconst calculateBollingerBands = (data, period, stdDevFactor)=>{\n    const maData = calculateMA(data, period);\n    const bands = {\n        middle: maData,\n        upper: [],\n        lower: []\n    };\n    for(let i = 0; i < data.length; i++){\n        if (i < period - 1) {\n            bands.upper.push({\n                time: data[i].time,\n                value: NaN\n            });\n            bands.lower.push({\n                time: data[i].time,\n                value: NaN\n            });\n            continue;\n        }\n        const slice = data.slice(i - period + 1, i + 1);\n        const mean = maData[i].value;\n        const variance = slice.reduce((acc, curr)=>acc + Math.pow(curr.close - mean, 2), 0) / period;\n        const stdDev = Math.sqrt(variance);\n        bands.upper.push({\n            time: data[i].time,\n            value: mean + stdDevFactor * stdDev\n        });\n        bands.lower.push({\n            time: data[i].time,\n            value: mean - stdDevFactor * stdDev\n        });\n    }\n    return bands;\n};\nconst ChartComponent = ()=>{\n    _s();\n    let { symbol } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_context_CryptoContext__WEBPACK_IMPORTED_MODULE_3__.CryptoContext);\n    const chartContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const seriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const maSeriesRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const bollingerSeriesRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        upper: null,\n        middle: null,\n        lower: null\n    });\n    const [selectedTimeframe, setSelectedTimeframe] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"1m\");\n    const [showMA, setShowMA] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBollinger, setShowBollinger] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Fonction pour mettre à jour une bougie existante\n    const updateCandle = (candle, newValue)=>({\n            time: candle.time,\n            close: newValue,\n            open: candle.open,\n            low: Math.min(candle.low, newValue),\n            high: Math.max(candle.high, newValue)\n        });\n    const initializeChart = async ()=>{\n        var _seriesRef_current, _chartRef_current;\n        const historicalData = await historyPrice(symbol, selectedTimeframe);\n        (_seriesRef_current = seriesRef.current) === null || _seriesRef_current === void 0 ? void 0 : _seriesRef_current.setData(historicalData);\n        console.log(symbol);\n        // Mettre à jour les indicateurs\n        if (showMA) {\n            indicators.MA.periods.forEach((period, index)=>{\n                var _maSeriesRefs_current_index;\n                const maData = calculateMA(historicalData, period);\n                (_maSeriesRefs_current_index = maSeriesRefs.current[index]) === null || _maSeriesRefs_current_index === void 0 ? void 0 : _maSeriesRefs_current_index.setData(maData);\n            });\n        }\n        if (showBollinger) {\n            var _bollingerSeriesRefs_current_upper, _bollingerSeriesRefs_current_middle, _bollingerSeriesRefs_current_lower;\n            const bollingerData = calculateBollingerBands(historicalData, indicators.Bollinger.period, indicators.Bollinger.stdDev);\n            (_bollingerSeriesRefs_current_upper = bollingerSeriesRefs.current.upper) === null || _bollingerSeriesRefs_current_upper === void 0 ? void 0 : _bollingerSeriesRefs_current_upper.setData(bollingerData.upper);\n            (_bollingerSeriesRefs_current_middle = bollingerSeriesRefs.current.middle) === null || _bollingerSeriesRefs_current_middle === void 0 ? void 0 : _bollingerSeriesRefs_current_middle.setData(bollingerData.middle);\n            (_bollingerSeriesRefs_current_lower = bollingerSeriesRefs.current.lower) === null || _bollingerSeriesRefs_current_lower === void 0 ? void 0 : _bollingerSeriesRefs_current_lower.setData(bollingerData.lower);\n        }\n        (_chartRef_current = chartRef.current) === null || _chartRef_current === void 0 ? void 0 : _chartRef_current.timeScale().fitContent();\n        let count = 0;\n        let currentCrypto = symbol;\n        // Gérer les mises à jour en temps réel\n        const intervalId = setInterval(async ()=>{\n            count++;\n            const latestCandle = await latestPrice(symbol);\n            const lastCandle = historicalData[historicalData.length - 1];\n            if (count < 5) {\n                // Mettre à jour la dernière bougie\n                const updatedCandle = updateCandle(lastCandle, latestCandle.close);\n                try {\n                    var _seriesRef_current;\n                    (_seriesRef_current = seriesRef.current) === null || _seriesRef_current === void 0 ? void 0 : _seriesRef_current.update(updatedCandle);\n                } catch (error) {\n                    console.log(error);\n                }\n                console.log(currentCrypto);\n            } else {\n                var // Ajouter une nouvelle bougie\n                _seriesRef_current1;\n                (_seriesRef_current1 = seriesRef.current) === null || _seriesRef_current1 === void 0 ? void 0 : _seriesRef_current1.update(latestCandle);\n                historicalData.push(latestCandle);\n                count = 0;\n            }\n            // Mettre à jour les indicateurs\n            if (showMA) {\n                indicators.MA.periods.forEach((period, index)=>{\n                    var _maSeriesRefs_current_index;\n                    const maData = calculateMA(historicalData, period);\n                    (_maSeriesRefs_current_index = maSeriesRefs.current[index]) === null || _maSeriesRefs_current_index === void 0 ? void 0 : _maSeriesRefs_current_index.setData(maData);\n                });\n            }\n            if (showBollinger) {\n                var _bollingerSeriesRefs_current_upper, _bollingerSeriesRefs_current_middle, _bollingerSeriesRefs_current_lower;\n                const bollingerData = calculateBollingerBands(historicalData, indicators.Bollinger.period, indicators.Bollinger.stdDev);\n                (_bollingerSeriesRefs_current_upper = bollingerSeriesRefs.current.upper) === null || _bollingerSeriesRefs_current_upper === void 0 ? void 0 : _bollingerSeriesRefs_current_upper.setData(bollingerData.upper);\n                (_bollingerSeriesRefs_current_middle = bollingerSeriesRefs.current.middle) === null || _bollingerSeriesRefs_current_middle === void 0 ? void 0 : _bollingerSeriesRefs_current_middle.setData(bollingerData.middle);\n                (_bollingerSeriesRefs_current_lower = bollingerSeriesRefs.current.lower) === null || _bollingerSeriesRefs_current_lower === void 0 ? void 0 : _bollingerSeriesRefs_current_lower.setData(bollingerData.lower);\n            }\n        }, 10000); // Mise à jour toutes les 10 secondes\n    // return () => clearInterval(intervalId);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!chartContainerRef.current) return;\n        const chartOptions = {\n            layout: {\n                textColor: \"black\",\n                background: {\n                    type: \"solid\",\n                    color: \"white\"\n                }\n            },\n            height: 500,\n            watermark: {\n                visible: false\n            }\n        };\n        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(chartContainerRef.current, chartOptions);\n        const candlestickSeries = chart.addCandlestickSeries({\n            upColor: \"#26a69a\",\n            downColor: \"#ef5350\",\n            borderVisible: true,\n            wickUpColor: \"#26a69a\",\n            wickDownColor: \"#ef5350\"\n        });\n        chartRef.current = chart;\n        seriesRef.current = candlestickSeries;\n        // Initialiser les séries MA\n        maSeriesRefs.current = indicators.MA.periods.map((period, index)=>chart.addLineSeries({\n                color: indicators.MA.colors[index],\n                lineWidth: 2,\n                visible: showMA\n            }));\n        // Initialiser les séries Bollinger\n        const bollingerUpper = chart.addLineSeries({\n            color: indicators.Bollinger.color,\n            lineWidth: 1,\n            lineStyle: 2,\n            visible: showBollinger\n        });\n        const bollingerMiddle = chart.addLineSeries({\n            color: indicators.Bollinger.color,\n            lineWidth: 2,\n            visible: showBollinger\n        });\n        const bollingerLower = chart.addLineSeries({\n            color: indicators.Bollinger.color,\n            lineWidth: 1,\n            lineStyle: 2,\n            visible: showBollinger\n        });\n        bollingerSeriesRefs.current = {\n            upper: bollingerUpper,\n            middle: bollingerMiddle,\n            lower: bollingerLower\n        };\n        return ()=>{\n            chart.remove();\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!chartRef.current || !seriesRef.current) return;\n        initializeChart();\n    }, [\n        selectedTimeframe,\n        showMA,\n        showBollinger,\n        symbol\n    ]);\n    // Gérer la visibilité des MA\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        maSeriesRefs.current.forEach((series)=>{\n            series === null || series === void 0 ? void 0 : series.applyOptions({\n                visible: showMA\n            });\n        });\n    }, [\n        showMA\n    ]);\n    // Gérer la visibilité des Bollinger Bands\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        Object.values(bollingerSeriesRefs.current).forEach((series)=>{\n            series === null || series === void 0 ? void 0 : series.applyOptions({\n                visible: showBollinger\n            });\n        });\n    }, [\n        showBollinger\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.controlsContainer,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.timeframeContainer,\n                        children: Object.keys(timeframes).map((tf, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                style: {\n                                    ...styles.button,\n                                    backgroundColor: selectedTimeframe === tf ? \"#ddd\" : \"#fff\"\n                                },\n                                onClick: ()=>setSelectedTimeframe(tf),\n                                children: tf\n                            }, index, false, {\n                                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                                lineNumber: 290,\n                                columnNumber: 25\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                        lineNumber: 288,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.indicatorsContainer,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                style: {\n                                    ...styles.button,\n                                    backgroundColor: showMA ? \"#ddd\" : \"#fff\"\n                                },\n                                onClick: ()=>setShowMA(!showMA),\n                                children: \"MA\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                                lineNumber: 303,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                style: {\n                                    ...styles.button,\n                                    backgroundColor: showBollinger ? \"#ddd\" : \"#fff\"\n                                },\n                                onClick: ()=>setShowBollinger(!showBollinger),\n                                children: \"Bollinger\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                                lineNumber: 312,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                        lineNumber: 302,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                lineNumber: 287,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chartContainerRef,\n                style: {\n                    position: \"relative\",\n                    width: \"100%\",\n                    height: \"400px\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                lineNumber: 323,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n        lineNumber: 286,\n        columnNumber: 9\n    }, undefined);\n};\n_s(ChartComponent, \"vFfURcfLRaqIEJ7DtwgTckQmyjI=\");\n_c = ChartComponent;\nconst styles = {\n    controlsContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"10px\"\n    },\n    timeframeContainer: {\n        display: \"flex\",\n        gap: \"5px\"\n    },\n    indicatorsContainer: {\n        display: \"flex\",\n        gap: \"5px\"\n    },\n    button: {\n        padding: \"8px 16px\",\n        fontWeight: \"bold\",\n        cursor: \"pointer\",\n        borderRadius: \"5px\",\n        border: \"1px solid #ddd\",\n        backgroundColor: \"white\"\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChartComponent);\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Chart.tsx\n"));

/***/ })

});