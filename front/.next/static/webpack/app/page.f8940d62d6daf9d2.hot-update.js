"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/Chart.tsx":
/*!**********************************!*\
  !*** ./app/components/Chart.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ \"(app-pages-browser)/./node_modules/lightweight-charts/dist/lightweight-charts.development.mjs\");\n/* harmony import */ var _context_CryptoContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/CryptoContext */ \"(app-pages-browser)/./app/context/CryptoContext.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst timeframes = {\n    \"1m\": \"1\",\n    \"5m\": \"5\",\n    \"15m\": \"15\",\n    \"1h\": \"60\"\n};\n// Configurations des indicateurs\nconst indicators = {\n    MA: {\n        periods: [\n            20,\n            50,\n            200\n        ],\n        colors: [\n            \"#ff6b6b\",\n            \"#4ecdc4\",\n            \"#45b7d1\"\n        ]\n    },\n    Bollinger: {\n        period: 20,\n        stdDev: 2,\n        color: \"#9775fa\"\n    }\n};\n// Récupérer le dernier prix\nconst latestPrice = async (crypto)=>{\n    let result = await fetch(\"http://10.18.206.239:6060/crypto/latest/\" + crypto);\n    let data = await result.json();\n    data.ohlc.time = new Date(data.timestamp).getTime() / 1000;\n    const newCandle = data.ohlc;\n    return newCandle;\n};\n// Récupérer les données historiques\nconst historyPrice = async (crypto, timeframe)=>{\n    let result = await fetch(\"http://10.18.206.239:6060/crypto/history/\".concat(crypto, \"?timeframe=\").concat(timeframe));\n    let data = await result.json();\n    return data.history.map((candle)=>({\n            time: new Date(candle.timestamp).getTime() / 1000,\n            open: candle.ohlc.open,\n            high: candle.ohlc.high,\n            low: candle.ohlc.low,\n            close: candle.ohlc.close\n        }));\n};\n// Calculer la moyenne mobile (MA)\nconst calculateMA = (data, period)=>{\n    const maData = [];\n    for(let i = 0; i < data.length; i++){\n        if (i < period - 1) {\n            maData.push({\n                time: data[i].time,\n                value: NaN\n            });\n            continue;\n        }\n        const slice = data.slice(i - period + 1, i + 1);\n        const sum = slice.reduce((acc, curr)=>acc + curr.close, 0);\n        const ma = sum / period;\n        maData.push({\n            time: data[i].time,\n            value: ma\n        });\n    }\n    return maData;\n};\n// Calculer les bandes de Bollinger\nconst calculateBollingerBands = (data, period, stdDevFactor)=>{\n    const maData = calculateMA(data, period);\n    const bands = {\n        middle: maData,\n        upper: [],\n        lower: []\n    };\n    for(let i = 0; i < data.length; i++){\n        if (i < period - 1) {\n            bands.upper.push({\n                time: data[i].time,\n                value: NaN\n            });\n            bands.lower.push({\n                time: data[i].time,\n                value: NaN\n            });\n            continue;\n        }\n        const slice = data.slice(i - period + 1, i + 1);\n        const mean = maData[i].value;\n        const variance = slice.reduce((acc, curr)=>acc + Math.pow(curr.close - mean, 2), 0) / period;\n        const stdDev = Math.sqrt(variance);\n        bands.upper.push({\n            time: data[i].time,\n            value: mean + stdDevFactor * stdDev\n        });\n        bands.lower.push({\n            time: data[i].time,\n            value: mean - stdDevFactor * stdDev\n        });\n    }\n    return bands;\n};\nconst ChartComponent = ()=>{\n    _s();\n    let { symbol } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_context_CryptoContext__WEBPACK_IMPORTED_MODULE_3__.CryptoContext);\n    const chartContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const seriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const maSeriesRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const bollingerSeriesRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        upper: null,\n        middle: null,\n        lower: null\n    });\n    const [selectedTimeframe, setSelectedTimeframe] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"1m\");\n    const [showMA, setShowMA] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBollinger, setShowBollinger] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Fonction pour mettre à jour une bougie existante\n    const updateCandle = (candle, newValue)=>({\n            time: candle.time,\n            close: newValue,\n            open: candle.open,\n            low: Math.min(candle.low, newValue),\n            high: Math.max(candle.high, newValue)\n        });\n    const initializeChart = async (crypto)=>{\n        var _seriesRef_current, _chartRef_current;\n        const historicalData = await historyPrice(crypto, selectedTimeframe);\n        (_seriesRef_current = seriesRef.current) === null || _seriesRef_current === void 0 ? void 0 : _seriesRef_current.setData(historicalData);\n        console.log(\"good\", crypto);\n        // Mettre à jour les indicateurs\n        if (showMA) {\n            indicators.MA.periods.forEach((period, index)=>{\n                var _maSeriesRefs_current_index;\n                const maData = calculateMA(historicalData, period);\n                (_maSeriesRefs_current_index = maSeriesRefs.current[index]) === null || _maSeriesRefs_current_index === void 0 ? void 0 : _maSeriesRefs_current_index.setData(maData);\n            });\n        }\n        if (showBollinger) {\n            var _bollingerSeriesRefs_current_upper, _bollingerSeriesRefs_current_middle, _bollingerSeriesRefs_current_lower;\n            const bollingerData = calculateBollingerBands(historicalData, indicators.Bollinger.period, indicators.Bollinger.stdDev);\n            (_bollingerSeriesRefs_current_upper = bollingerSeriesRefs.current.upper) === null || _bollingerSeriesRefs_current_upper === void 0 ? void 0 : _bollingerSeriesRefs_current_upper.setData(bollingerData.upper);\n            (_bollingerSeriesRefs_current_middle = bollingerSeriesRefs.current.middle) === null || _bollingerSeriesRefs_current_middle === void 0 ? void 0 : _bollingerSeriesRefs_current_middle.setData(bollingerData.middle);\n            (_bollingerSeriesRefs_current_lower = bollingerSeriesRefs.current.lower) === null || _bollingerSeriesRefs_current_lower === void 0 ? void 0 : _bollingerSeriesRefs_current_lower.setData(bollingerData.lower);\n        }\n        (_chartRef_current = chartRef.current) === null || _chartRef_current === void 0 ? void 0 : _chartRef_current.timeScale().fitContent();\n        let count = 0;\n        let currentCrypto = crypto;\n        // Gérer les mises à jour en temps réel\n        const intervalId = setInterval(async ()=>{\n            count++;\n            const latestCandle = await latestPrice(crypto);\n            const historicalData2 = await historyPrice(crypto, selectedTimeframe);\n            const lastCandle = historicalData2[historicalData.length - 1];\n            if (count < 5) {\n                // Mettre à jour la dernière bougie\n                const updatedCandle = updateCandle(lastCandle, latestCandle.close);\n                try {\n                    var _seriesRef_current;\n                    (_seriesRef_current = seriesRef.current) === null || _seriesRef_current === void 0 ? void 0 : _seriesRef_current.update(updatedCandle);\n                } catch (error) {\n                    console.log(error);\n                }\n                console.log(currentCrypto);\n            } else {\n                var _seriesRef_current1;\n                // Ajouter une nouvelle bougie\n                console.log(currentCrypto);\n                (_seriesRef_current1 = seriesRef.current) === null || _seriesRef_current1 === void 0 ? void 0 : _seriesRef_current1.update(latestCandle);\n                historicalData.push(latestCandle);\n                count = 0;\n            }\n            // Mettre à jour les indicateurs\n            if (showMA) {\n                indicators.MA.periods.forEach((period, index)=>{\n                    var _maSeriesRefs_current_index;\n                    const maData = calculateMA(historicalData, period);\n                    (_maSeriesRefs_current_index = maSeriesRefs.current[index]) === null || _maSeriesRefs_current_index === void 0 ? void 0 : _maSeriesRefs_current_index.setData(maData);\n                });\n            }\n            if (showBollinger) {\n                var _bollingerSeriesRefs_current_upper, _bollingerSeriesRefs_current_middle, _bollingerSeriesRefs_current_lower;\n                const bollingerData = calculateBollingerBands(historicalData, indicators.Bollinger.period, indicators.Bollinger.stdDev);\n                (_bollingerSeriesRefs_current_upper = bollingerSeriesRefs.current.upper) === null || _bollingerSeriesRefs_current_upper === void 0 ? void 0 : _bollingerSeriesRefs_current_upper.setData(bollingerData.upper);\n                (_bollingerSeriesRefs_current_middle = bollingerSeriesRefs.current.middle) === null || _bollingerSeriesRefs_current_middle === void 0 ? void 0 : _bollingerSeriesRefs_current_middle.setData(bollingerData.middle);\n                (_bollingerSeriesRefs_current_lower = bollingerSeriesRefs.current.lower) === null || _bollingerSeriesRefs_current_lower === void 0 ? void 0 : _bollingerSeriesRefs_current_lower.setData(bollingerData.lower);\n            }\n        }, 10000); // Mise à jour toutes les 10 secondes\n        console.log(crypto);\n        return ()=>clearInterval(intervalId);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!chartContainerRef.current) return;\n        const chartOptions = {\n            layout: {\n                textColor: \"black\",\n                background: {\n                    type: \"solid\",\n                    color: \"white\"\n                }\n            },\n            height: 500,\n            watermark: {\n                visible: false\n            }\n        };\n        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(chartContainerRef.current, chartOptions);\n        const candlestickSeries = chart.addCandlestickSeries({\n            upColor: \"#26a69a\",\n            downColor: \"#ef5350\",\n            borderVisible: true,\n            wickUpColor: \"#26a69a\",\n            wickDownColor: \"#ef5350\"\n        });\n        chartRef.current = chart;\n        seriesRef.current = candlestickSeries;\n        // Initialiser les séries MA\n        maSeriesRefs.current = indicators.MA.periods.map((period, index)=>chart.addLineSeries({\n                color: indicators.MA.colors[index],\n                lineWidth: 2,\n                visible: showMA\n            }));\n        // Initialiser les séries Bollinger\n        const bollingerUpper = chart.addLineSeries({\n            color: indicators.Bollinger.color,\n            lineWidth: 1,\n            lineStyle: 2,\n            visible: showBollinger\n        });\n        const bollingerMiddle = chart.addLineSeries({\n            color: indicators.Bollinger.color,\n            lineWidth: 2,\n            visible: showBollinger\n        });\n        const bollingerLower = chart.addLineSeries({\n            color: indicators.Bollinger.color,\n            lineWidth: 1,\n            lineStyle: 2,\n            visible: showBollinger\n        });\n        bollingerSeriesRefs.current = {\n            upper: bollingerUpper,\n            middle: bollingerMiddle,\n            lower: bollingerLower\n        };\n        return ()=>{\n            chart.remove();\n        };\n    }, [\n        symbol\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!chartRef.current || !seriesRef.current) return;\n        initializeChart(symbol);\n    }, [\n        selectedTimeframe,\n        showMA,\n        showBollinger,\n        symbol\n    ]);\n    // Gérer la visibilité des MA\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        maSeriesRefs.current.forEach((series)=>{\n            series === null || series === void 0 ? void 0 : series.applyOptions({\n                visible: showMA\n            });\n        });\n    }, [\n        showMA\n    ]);\n    // Gérer la visibilité des Bollinger Bands\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        Object.values(bollingerSeriesRefs.current).forEach((series)=>{\n            series === null || series === void 0 ? void 0 : series.applyOptions({\n                visible: showBollinger\n            });\n        });\n    }, [\n        showBollinger,\n        symbol\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.controlsContainer,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.timeframeContainer,\n                        children: Object.keys(timeframes).map((tf, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                style: {\n                                    ...styles.button,\n                                    backgroundColor: selectedTimeframe === tf ? \"#ddd\" : \"#fff\"\n                                },\n                                onClick: ()=>setSelectedTimeframe(tf),\n                                children: tf\n                            }, index, false, {\n                                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                                lineNumber: 309,\n                                columnNumber: 25\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                        lineNumber: 307,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.indicatorsContainer,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                style: {\n                                    ...styles.button,\n                                    backgroundColor: showMA ? \"#ddd\" : \"#fff\"\n                                },\n                                onClick: ()=>setShowMA(!showMA),\n                                children: \"MA\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                                lineNumber: 322,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                style: {\n                                    ...styles.button,\n                                    backgroundColor: showBollinger ? \"#ddd\" : \"#fff\"\n                                },\n                                onClick: ()=>setShowBollinger(!showBollinger),\n                                children: \"Bollinger\"\n                            }, void 0, false, {\n                                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                                lineNumber: 331,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                        lineNumber: 321,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                lineNumber: 306,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chartContainerRef,\n                style: {\n                    position: \"relative\",\n                    width: \"100%\",\n                    height: \"400px\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n                lineNumber: 342,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jeremyjoseph/Epitech/cryptoWiz/front/app/components/Chart.tsx\",\n        lineNumber: 305,\n        columnNumber: 9\n    }, undefined);\n};\n_s(ChartComponent, \"vFfURcfLRaqIEJ7DtwgTckQmyjI=\");\n_c = ChartComponent;\nconst styles = {\n    controlsContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"10px\"\n    },\n    timeframeContainer: {\n        display: \"flex\",\n        gap: \"5px\"\n    },\n    indicatorsContainer: {\n        display: \"flex\",\n        gap: \"5px\"\n    },\n    button: {\n        padding: \"8px 16px\",\n        fontWeight: \"bold\",\n        cursor: \"pointer\",\n        borderRadius: \"5px\",\n        border: \"1px solid #ddd\",\n        backgroundColor: \"white\"\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChartComponent);\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0NoYXJ0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RTtBQUN3QztBQUN0RDtBQVV6RCxNQUFNTyxhQUFhO0lBQ2YsTUFBTTtJQUNOLE1BQU07SUFDTixPQUFPO0lBQ1AsTUFBTTtBQUNWO0FBRUEsaUNBQWlDO0FBQ2pDLE1BQU1DLGFBQWE7SUFDZkMsSUFBSTtRQUNBQyxTQUFTO1lBQUM7WUFBSTtZQUFJO1NBQUk7UUFDdEJDLFFBQVE7WUFBQztZQUFXO1lBQVc7U0FBVTtJQUM3QztJQUNBQyxXQUFXO1FBQ1BDLFFBQVE7UUFDUkMsUUFBUTtRQUNSQyxPQUFPO0lBQ1g7QUFDSjtBQUVBLDRCQUE0QjtBQUM1QixNQUFNQyxjQUFjLE9BQU9DO0lBQ3ZCLElBQUlDLFNBQVMsTUFBTUMsTUFBTSw2Q0FBNkNGO0lBQ3RFLElBQUlHLE9BQU8sTUFBTUYsT0FBT0csSUFBSTtJQUM1QkQsS0FBS0UsSUFBSSxDQUFDQyxJQUFJLEdBQUksSUFBSUMsS0FBS0osS0FBS0ssU0FBUyxFQUFFQyxPQUFPLEtBQUs7SUFDdkQsTUFBTUMsWUFBb0JQLEtBQUtFLElBQUk7SUFDbkMsT0FBT0s7QUFDWDtBQUVBLG9DQUFvQztBQUNwQyxNQUFNQyxlQUFlLE9BQU9YLFFBQWdCWTtJQUN4QyxJQUFJWCxTQUFTLE1BQU1DLE1BQU0sNENBQWdFVSxPQUFwQlosUUFBTyxlQUF1QixPQUFWWTtJQUN6RixJQUFJVCxPQUFPLE1BQU1GLE9BQU9HLElBQUk7SUFDNUIsT0FBT0QsS0FBS1UsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsU0FBaUI7WUFDdENULE1BQU8sSUFBSUMsS0FBS1EsT0FBT1AsU0FBUyxFQUFFQyxPQUFPLEtBQUs7WUFDOUNPLE1BQU1ELE9BQU9WLElBQUksQ0FBQ1csSUFBSTtZQUN0QkMsTUFBTUYsT0FBT1YsSUFBSSxDQUFDWSxJQUFJO1lBQ3RCQyxLQUFLSCxPQUFPVixJQUFJLENBQUNhLEdBQUc7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MENBR0QsOERBQUNnRTtnQ0FDR04sT0FBTztvQ0FDSCxHQUFHQyxPQUFPSyxNQUFNO29DQUNoQkMsaUJBQWlCL0QsZ0JBQWdCLFNBQVM7Z0NBQzlDO2dDQUNBZ0UsU0FBUyxJQUFNL0QsaUJBQWlCLENBQUNEOzBDQUNwQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUtULDhEQUFDdUQ7Z0JBQUlXLEtBQUszRTtnQkFBbUJpRSxPQUFPO29CQUFFVyxVQUFVO29CQUFZQyxPQUFPO29CQUFRbkMsUUFBUTtnQkFBUTs7Ozs7Ozs7Ozs7O0FBR3ZHO0dBdFBNNUM7S0FBQUE7QUF3UE4sTUFBTW9FLFNBQWlEO0lBQ25EQyxtQkFBbUI7UUFDZlcsU0FBUztRQUNUQyxnQkFBZ0I7UUFDaEJDLFlBQVk7UUFDWkMsY0FBYztJQUNsQjtJQUNBYixvQkFBb0I7UUFDaEJVLFNBQVM7UUFDVEksS0FBSztJQUNUO0lBQ0FSLHFCQUFxQjtRQUNqQkksU0FBUztRQUNUSSxLQUFLO0lBQ1Q7SUFDQVgsUUFBUTtRQUNKWSxTQUFTO1FBQ1RDLFlBQVk7UUFDWkMsUUFBUTtRQUNSQyxjQUFjO1FBQ2RDLFFBQVE7UUFDUmYsaUJBQWlCO0lBQ3JCO0FBQ0o7QUFFQSwrREFBZTFFLGNBQWNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvQ2hhcnQudHN4Pzg4NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUNoYXJ0LCBJQ2hhcnRBcGksIENhbmRsZXN0aWNrU2VyaWVzQXBpLCBMaW5lU2VyaWVzQXBpLCBVVENUaW1lc3RhbXAgfSBmcm9tICdsaWdodHdlaWdodC1jaGFydHMnO1xuaW1wb3J0IHsgQ3J5cHRvQ29udGV4dCB9IGZyb20gJy4uL2NvbnRleHQvQ3J5cHRvQ29udGV4dCc7XG5cbmludGVyZmFjZSBDYW5kbGUge1xuICAgIHRpbWU6IFVUQ1RpbWVzdGFtcDtcbiAgICBvcGVuOiBudW1iZXI7XG4gICAgaGlnaDogbnVtYmVyO1xuICAgIGxvdzogbnVtYmVyO1xuICAgIGNsb3NlOiBudW1iZXI7XG59XG5cbmNvbnN0IHRpbWVmcmFtZXMgPSB7XG4gICAgJzFtJzogJzEnLFxuICAgICc1bSc6ICc1JyxcbiAgICAnMTVtJzogJzE1JyxcbiAgICAnMWgnOiAnNjAnLFxufTtcblxuLy8gQ29uZmlndXJhdGlvbnMgZGVzIGluZGljYXRldXJzXG5jb25zdCBpbmRpY2F0b3JzID0ge1xuICAgIE1BOiB7XG4gICAgICAgIHBlcmlvZHM6IFsyMCwgNTAsIDIwMF0sXG4gICAgICAgIGNvbG9yczogWycjZmY2YjZiJywgJyM0ZWNkYzQnLCAnIzQ1YjdkMSddLFxuICAgIH0sXG4gICAgQm9sbGluZ2VyOiB7XG4gICAgICAgIHBlcmlvZDogMjAsXG4gICAgICAgIHN0ZERldjogMixcbiAgICAgICAgY29sb3I6ICcjOTc3NWZhJyxcbiAgICB9LFxufTtcblxuLy8gUsOpY3Vww6lyZXIgbGUgZGVybmllciBwcml4XG5jb25zdCBsYXRlc3RQcmljZSA9IGFzeW5jIChjcnlwdG86IHN0cmluZykgPT4ge1xuICAgIGxldCByZXN1bHQgPSBhd2FpdCBmZXRjaCgnaHR0cDovLzEwLjE4LjIwNi4yMzk6NjA2MC9jcnlwdG8vbGF0ZXN0LycgKyBjcnlwdG8pO1xuICAgIGxldCBkYXRhID0gYXdhaXQgcmVzdWx0Lmpzb24oKTtcbiAgICBkYXRhLm9obGMudGltZSA9IChuZXcgRGF0ZShkYXRhLnRpbWVzdGFtcCkuZ2V0VGltZSgpIC8gMTAwMCkgYXMgVVRDVGltZXN0YW1wO1xuICAgIGNvbnN0IG5ld0NhbmRsZTogQ2FuZGxlID0gZGF0YS5vaGxjO1xuICAgIHJldHVybiBuZXdDYW5kbGU7XG59O1xuXG4vLyBSw6ljdXDDqXJlciBsZXMgZG9ubsOpZXMgaGlzdG9yaXF1ZXNcbmNvbnN0IGhpc3RvcnlQcmljZSA9IGFzeW5jIChjcnlwdG86IHN0cmluZywgdGltZWZyYW1lOiBzdHJpbmcpID0+IHtcbiAgICBsZXQgcmVzdWx0ID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly8xMC4xOC4yMDYuMjM5OjYwNjAvY3J5cHRvL2hpc3RvcnkvJHtjcnlwdG99P3RpbWVmcmFtZT0ke3RpbWVmcmFtZX1gKTtcbiAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3VsdC5qc29uKCk7XG4gICAgcmV0dXJuIGRhdGEuaGlzdG9yeS5tYXAoKGNhbmRsZTogYW55KSA9PiAoe1xuICAgICAgICB0aW1lOiAobmV3IERhdGUoY2FuZGxlLnRpbWVzdGFtcCkuZ2V0VGltZSgpIC8gMTAwMCkgYXMgVVRDVGltZXN0YW1wLFxuICAgICAgICBvcGVuOiBjYW5kbGUub2hsYy5vcGVuLFxuICAgICAgICBoaWdoOiBjYW5kbGUub2hsYy5oaWdoLFxuICAgICAgICBsb3c6IGNhbmRsZS5vaGxjLmxvdyxcbiAgICAgICAgY2xvc2U6IGNhbmRsZS5vaGxjLmNsb3NlLFxuICAgIH0pKTtcbn07XG5cbi8vIENhbGN1bGVyIGxhIG1veWVubmUgbW9iaWxlIChNQSlcbmNvbnN0IGNhbGN1bGF0ZU1BID0gKGRhdGE6IENhbmRsZVtdLCBwZXJpb2Q6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IG1hRGF0YSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaSA8IHBlcmlvZCAtIDEpIHtcbiAgICAgICAgICAgIG1hRGF0YS5wdXNoKHsgdGltZTogZGF0YVtpXS50aW1lLCB2YWx1ZTogTmFOIH0pO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2xpY2UgPSBkYXRhLnNsaWNlKGkgLSBwZXJpb2QgKyAxLCBpICsgMSk7XG4gICAgICAgIGNvbnN0IHN1bSA9IHNsaWNlLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MgKyBjdXJyLmNsb3NlLCAwKTtcbiAgICAgICAgY29uc3QgbWEgPSBzdW0gLyBwZXJpb2Q7XG4gICAgICAgIG1hRGF0YS5wdXNoKHsgdGltZTogZGF0YVtpXS50aW1lLCB2YWx1ZTogbWEgfSk7XG4gICAgfVxuICAgIHJldHVybiBtYURhdGE7XG59O1xuXG4vLyBDYWxjdWxlciBsZXMgYmFuZGVzIGRlIEJvbGxpbmdlclxuY29uc3QgY2FsY3VsYXRlQm9sbGluZ2VyQmFuZHMgPSAoZGF0YTogQ2FuZGxlW10sIHBlcmlvZDogbnVtYmVyLCBzdGREZXZGYWN0b3I6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IG1hRGF0YSA9IGNhbGN1bGF0ZU1BKGRhdGEsIHBlcmlvZCk7XG4gICAgY29uc3QgYmFuZHMgPSB7XG4gICAgICAgIG1pZGRsZTogbWFEYXRhLFxuICAgICAgICB1cHBlcjogW10sXG4gICAgICAgIGxvd2VyOiBbXVxuICAgIH07XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGkgPCBwZXJpb2QgLSAxKSB7XG4gICAgICAgICAgICBiYW5kcy51cHBlci5wdXNoKHsgdGltZTogZGF0YVtpXS50aW1lLCB2YWx1ZTogTmFOIH0pO1xuICAgICAgICAgICAgYmFuZHMubG93ZXIucHVzaCh7IHRpbWU6IGRhdGFbaV0udGltZSwgdmFsdWU6IE5hTiB9KTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2xpY2UgPSBkYXRhLnNsaWNlKGkgLSBwZXJpb2QgKyAxLCBpICsgMSk7XG4gICAgICAgIGNvbnN0IG1lYW4gPSBtYURhdGFbaV0udmFsdWU7XG4gICAgICAgIGNvbnN0IHZhcmlhbmNlID0gc2xpY2UucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIE1hdGgucG93KGN1cnIuY2xvc2UgLSBtZWFuLCAyKSwgMCkgLyBwZXJpb2Q7XG4gICAgICAgIGNvbnN0IHN0ZERldiA9IE1hdGguc3FydCh2YXJpYW5jZSk7XG5cbiAgICAgICAgYmFuZHMudXBwZXIucHVzaCh7IHRpbWU6IGRhdGFbaV0udGltZSwgdmFsdWU6IG1lYW4gKyBzdGREZXZGYWN0b3IgKiBzdGREZXYgfSk7XG4gICAgICAgIGJhbmRzLmxvd2VyLnB1c2goeyB0aW1lOiBkYXRhW2ldLnRpbWUsIHZhbHVlOiBtZWFuIC0gc3RkRGV2RmFjdG9yICogc3RkRGV2IH0pO1xuICAgIH1cblxuICAgIHJldHVybiBiYW5kcztcbn07XG5cbmNvbnN0IENoYXJ0Q29tcG9uZW50OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgICBsZXQge3N5bWJvbH0gPSB1c2VDb250ZXh0KENyeXB0b0NvbnRleHQpXG4gICAgY29uc3QgY2hhcnRDb250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICAgIGNvbnN0IGNoYXJ0UmVmID0gdXNlUmVmPElDaGFydEFwaSB8IG51bGw+KG51bGwpO1xuICAgIGNvbnN0IHNlcmllc1JlZiA9IHVzZVJlZjxDYW5kbGVzdGlja1Nlcmllc0FwaSB8IG51bGw+KG51bGwpO1xuICAgIGNvbnN0IG1hU2VyaWVzUmVmcyA9IHVzZVJlZjxMaW5lU2VyaWVzQXBpW10+KFtdKTtcbiAgICBjb25zdCBib2xsaW5nZXJTZXJpZXNSZWZzID0gdXNlUmVmPHtcbiAgICAgICAgdXBwZXI6IExpbmVTZXJpZXNBcGkgfCBudWxsO1xuICAgICAgICBtaWRkbGU6IExpbmVTZXJpZXNBcGkgfCBudWxsO1xuICAgICAgICBsb3dlcjogTGluZVNlcmllc0FwaSB8IG51bGw7XG4gICAgfT4oeyB1cHBlcjogbnVsbCwgbWlkZGxlOiBudWxsLCBsb3dlcjogbnVsbCB9KTtcblxuICAgIGNvbnN0IFtzZWxlY3RlZFRpbWVmcmFtZSwgc2V0U2VsZWN0ZWRUaW1lZnJhbWVdID0gdXNlU3RhdGU8JzFtJyB8ICc1bScgfCAnMTVtJyB8ICcxaCc+KCcxbScpO1xuICAgIGNvbnN0IFtzaG93TUEsIHNldFNob3dNQV0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XG4gICAgY29uc3QgW3Nob3dCb2xsaW5nZXIsIHNldFNob3dCb2xsaW5nZXJdID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuXG4gICAgLy8gRm9uY3Rpb24gcG91ciBtZXR0cmUgw6Agam91ciB1bmUgYm91Z2llIGV4aXN0YW50ZVxuICAgIGNvbnN0IHVwZGF0ZUNhbmRsZSA9IChjYW5kbGU6IENhbmRsZSwgbmV3VmFsdWU6IG51bWJlcik6IENhbmRsZSA9PiAoe1xuICAgICAgICB0aW1lOiBjYW5kbGUudGltZSxcbiAgICAgICAgY2xvc2U6IG5ld1ZhbHVlLFxuICAgICAgICBvcGVuOiBjYW5kbGUub3BlbixcbiAgICAgICAgbG93OiBNYXRoLm1pbihjYW5kbGUubG93LCBuZXdWYWx1ZSksXG4gICAgICAgIGhpZ2g6IE1hdGgubWF4KGNhbmRsZS5oaWdoLCBuZXdWYWx1ZSksXG4gICAgfSk7XG5cblxuXG5cblxuICAgIGNvbnN0IGluaXRpYWxpemVDaGFydCA9IGFzeW5jIChjcnlwdG8pID0+IHtcbiAgICAgICBcbiAgICAgICAgY29uc3QgaGlzdG9yaWNhbERhdGEgPSBhd2FpdCBoaXN0b3J5UHJpY2UoY3J5cHRvLCBzZWxlY3RlZFRpbWVmcmFtZSk7XG4gICAgICAgIHNlcmllc1JlZi5jdXJyZW50Py5zZXREYXRhKGhpc3RvcmljYWxEYXRhKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJnb29kXCIsIGNyeXB0bylcblxuICAgICAgICBcbiAgICAgICAgLy8gTWV0dHJlIMOgIGpvdXIgbGVzIGluZGljYXRldXJzXG4gICAgICAgIGlmIChzaG93TUEpIHtcbiAgICAgICAgICAgIGluZGljYXRvcnMuTUEucGVyaW9kcy5mb3JFYWNoKChwZXJpb2QsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWFEYXRhID0gY2FsY3VsYXRlTUEoaGlzdG9yaWNhbERhdGEsIHBlcmlvZCk7XG4gICAgICAgICAgICAgICAgbWFTZXJpZXNSZWZzLmN1cnJlbnRbaW5kZXhdPy5zZXREYXRhKG1hRGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzaG93Qm9sbGluZ2VyKSB7XG4gICAgICAgICAgICBjb25zdCBib2xsaW5nZXJEYXRhID0gY2FsY3VsYXRlQm9sbGluZ2VyQmFuZHMoXG4gICAgICAgICAgICAgICAgaGlzdG9yaWNhbERhdGEsXG4gICAgICAgICAgICAgICAgaW5kaWNhdG9ycy5Cb2xsaW5nZXIucGVyaW9kLFxuICAgICAgICAgICAgICAgIGluZGljYXRvcnMuQm9sbGluZ2VyLnN0ZERldlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGJvbGxpbmdlclNlcmllc1JlZnMuY3VycmVudC51cHBlcj8uc2V0RGF0YShib2xsaW5nZXJEYXRhLnVwcGVyKTtcbiAgICAgICAgICAgIGJvbGxpbmdlclNlcmllc1JlZnMuY3VycmVudC5taWRkbGU/LnNldERhdGEoYm9sbGluZ2VyRGF0YS5taWRkbGUpO1xuICAgICAgICAgICAgYm9sbGluZ2VyU2VyaWVzUmVmcy5jdXJyZW50Lmxvd2VyPy5zZXREYXRhKGJvbGxpbmdlckRhdGEubG93ZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgY2hhcnRSZWYuY3VycmVudD8udGltZVNjYWxlKCkuZml0Q29udGVudCgpO1xuICAgICAgICBsZXQgY291bnQgPSAwXG4gICAgICAgIGxldCBjdXJyZW50Q3J5cHRvID0gY3J5cHRvXG4gICAgICAgIC8vIEfDqXJlciBsZXMgbWlzZXMgw6Agam91ciBlbiB0ZW1wcyByw6llbFxuICAgICAgICBjb25zdCBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY291bnQrK1xuICAgICAgICAgICAgY29uc3QgbGF0ZXN0Q2FuZGxlID0gYXdhaXQgbGF0ZXN0UHJpY2UoY3J5cHRvKTtcbiAgICAgICAgICAgIGNvbnN0IGhpc3RvcmljYWxEYXRhMiA9IGF3YWl0IGhpc3RvcnlQcmljZShjcnlwdG8sIHNlbGVjdGVkVGltZWZyYW1lKTtcbiAgICAgICAgICAgIGNvbnN0IGxhc3RDYW5kbGUgPSBoaXN0b3JpY2FsRGF0YTJbaGlzdG9yaWNhbERhdGEubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChjb3VudCA8IDUpIHtcbiAgICAgICAgICAgICAgICAvLyBNZXR0cmUgw6Agam91ciBsYSBkZXJuacOocmUgYm91Z2llXG4gICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlZENhbmRsZSA9IHVwZGF0ZUNhbmRsZShsYXN0Q2FuZGxlLCBsYXRlc3RDYW5kbGUuY2xvc2UpO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHNlcmllc1JlZi5jdXJyZW50Py51cGRhdGUodXBkYXRlZENhbmRsZSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGN1cnJlbnRDcnlwdG8pXG4gICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gQWpvdXRlciB1bmUgbm91dmVsbGUgYm91Z2llXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coY3VycmVudENyeXB0bylcbiAgICAgICAgICAgICAgICBzZXJpZXNSZWYuY3VycmVudD8udXBkYXRlKGxhdGVzdENhbmRsZSk7XG4gICAgICAgICAgICAgICAgaGlzdG9yaWNhbERhdGEucHVzaChsYXRlc3RDYW5kbGUpO1xuICAgICAgICAgICAgICAgIGNvdW50ID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIFxuXG4gICAgICAgICAgICAvLyBNZXR0cmUgw6Agam91ciBsZXMgaW5kaWNhdGV1cnNcbiAgICAgICAgICAgIGlmIChzaG93TUEpIHtcbiAgICAgICAgICAgICAgICBpbmRpY2F0b3JzLk1BLnBlcmlvZHMuZm9yRWFjaCgocGVyaW9kLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtYURhdGEgPSBjYWxjdWxhdGVNQShoaXN0b3JpY2FsRGF0YSwgcGVyaW9kKTtcbiAgICAgICAgICAgICAgICAgICAgbWFTZXJpZXNSZWZzLmN1cnJlbnRbaW5kZXhdPy5zZXREYXRhKG1hRGF0YSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzaG93Qm9sbGluZ2VyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9sbGluZ2VyRGF0YSA9IGNhbGN1bGF0ZUJvbGxpbmdlckJhbmRzKFxuICAgICAgICAgICAgICAgICAgICBoaXN0b3JpY2FsRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgaW5kaWNhdG9ycy5Cb2xsaW5nZXIucGVyaW9kLFxuICAgICAgICAgICAgICAgICAgICBpbmRpY2F0b3JzLkJvbGxpbmdlci5zdGREZXZcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGJvbGxpbmdlclNlcmllc1JlZnMuY3VycmVudC51cHBlcj8uc2V0RGF0YShib2xsaW5nZXJEYXRhLnVwcGVyKTtcbiAgICAgICAgICAgICAgICBib2xsaW5nZXJTZXJpZXNSZWZzLmN1cnJlbnQubWlkZGxlPy5zZXREYXRhKGJvbGxpbmdlckRhdGEubWlkZGxlKTtcbiAgICAgICAgICAgICAgICBib2xsaW5nZXJTZXJpZXNSZWZzLmN1cnJlbnQubG93ZXI/LnNldERhdGEoYm9sbGluZ2VyRGF0YS5sb3dlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDEwMDAwKTsgLy8gTWlzZSDDoCBqb3VyIHRvdXRlcyBsZXMgMTAgc2Vjb25kZXNcbiAgICAgICAgY29uc29sZS5sb2coY3J5cHRvKVxuICAgICAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKTtcbiAgICB9O1xuXG5cblxuXG5cblxuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIFxuICAgICAgICBpZiAoIWNoYXJ0Q29udGFpbmVyUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgICAgICBjb25zdCBjaGFydE9wdGlvbnMgPSB7XG4gICAgICAgICAgICBsYXlvdXQ6IHtcbiAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6ICdibGFjaycsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogeyB0eXBlOiAnc29saWQnLCBjb2xvcjogJ3doaXRlJyB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhlaWdodDogNTAwLFxuICAgICAgICAgICAgd2F0ZXJtYXJrOiB7XG4gICAgICAgICAgICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGNoYXJ0ID0gY3JlYXRlQ2hhcnQoY2hhcnRDb250YWluZXJSZWYuY3VycmVudCwgY2hhcnRPcHRpb25zKTtcbiAgICAgICAgY29uc3QgY2FuZGxlc3RpY2tTZXJpZXMgPSBjaGFydC5hZGRDYW5kbGVzdGlja1Nlcmllcyh7XG4gICAgICAgICAgICB1cENvbG9yOiAnIzI2YTY5YScsXG4gICAgICAgICAgICBkb3duQ29sb3I6ICcjZWY1MzUwJyxcbiAgICAgICAgICAgIGJvcmRlclZpc2libGU6IHRydWUsXG4gICAgICAgICAgICB3aWNrVXBDb2xvcjogJyMyNmE2OWEnLFxuICAgICAgICAgICAgd2lja0Rvd25Db2xvcjogJyNlZjUzNTAnLFxuICAgICAgICB9KTtcblxuICAgICAgICBjaGFydFJlZi5jdXJyZW50ID0gY2hhcnQ7XG4gICAgICAgIHNlcmllc1JlZi5jdXJyZW50ID0gY2FuZGxlc3RpY2tTZXJpZXM7XG5cbiAgICAgICAgLy8gSW5pdGlhbGlzZXIgbGVzIHPDqXJpZXMgTUFcbiAgICAgICAgbWFTZXJpZXNSZWZzLmN1cnJlbnQgPSBpbmRpY2F0b3JzLk1BLnBlcmlvZHMubWFwKChwZXJpb2QsIGluZGV4KSA9PlxuICAgICAgICAgICAgY2hhcnQuYWRkTGluZVNlcmllcyh7XG4gICAgICAgICAgICAgICAgY29sb3I6IGluZGljYXRvcnMuTUEuY29sb3JzW2luZGV4XSxcbiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDIsXG4gICAgICAgICAgICAgICAgdmlzaWJsZTogc2hvd01BLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBJbml0aWFsaXNlciBsZXMgc8OpcmllcyBCb2xsaW5nZXJcbiAgICAgICAgY29uc3QgYm9sbGluZ2VyVXBwZXIgPSBjaGFydC5hZGRMaW5lU2VyaWVzKHtcbiAgICAgICAgICAgIGNvbG9yOiBpbmRpY2F0b3JzLkJvbGxpbmdlci5jb2xvcixcbiAgICAgICAgICAgIGxpbmVXaWR0aDogMSxcbiAgICAgICAgICAgIGxpbmVTdHlsZTogMixcbiAgICAgICAgICAgIHZpc2libGU6IHNob3dCb2xsaW5nZXIsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBib2xsaW5nZXJNaWRkbGUgPSBjaGFydC5hZGRMaW5lU2VyaWVzKHtcbiAgICAgICAgICAgIGNvbG9yOiBpbmRpY2F0b3JzLkJvbGxpbmdlci5jb2xvcixcbiAgICAgICAgICAgIGxpbmVXaWR0aDogMixcbiAgICAgICAgICAgIHZpc2libGU6IHNob3dCb2xsaW5nZXIsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBib2xsaW5nZXJMb3dlciA9IGNoYXJ0LmFkZExpbmVTZXJpZXMoe1xuICAgICAgICAgICAgY29sb3I6IGluZGljYXRvcnMuQm9sbGluZ2VyLmNvbG9yLFxuICAgICAgICAgICAgbGluZVdpZHRoOiAxLFxuICAgICAgICAgICAgbGluZVN0eWxlOiAyLFxuICAgICAgICAgICAgdmlzaWJsZTogc2hvd0JvbGxpbmdlcixcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYm9sbGluZ2VyU2VyaWVzUmVmcy5jdXJyZW50ID0ge1xuICAgICAgICAgICAgdXBwZXI6IGJvbGxpbmdlclVwcGVyLFxuICAgICAgICAgICAgbWlkZGxlOiBib2xsaW5nZXJNaWRkbGUsXG4gICAgICAgICAgICBsb3dlcjogYm9sbGluZ2VyTG93ZXIsXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGNoYXJ0LnJlbW92ZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtzeW1ib2xdKTtcblxuXG5cblxuXG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBcbiAgICAgICAgaWYgKCFjaGFydFJlZi5jdXJyZW50IHx8ICFzZXJpZXNSZWYuY3VycmVudCkgcmV0dXJuO1xuICAgICAgICBpbml0aWFsaXplQ2hhcnQoc3ltYm9sKTtcbiAgICB9LCBbc2VsZWN0ZWRUaW1lZnJhbWUsIHNob3dNQSwgc2hvd0JvbGxpbmdlcixzeW1ib2xdKTtcblxuICAgIC8vIEfDqXJlciBsYSB2aXNpYmlsaXTDqSBkZXMgTUFcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBtYVNlcmllc1JlZnMuY3VycmVudC5mb3JFYWNoKHNlcmllcyA9PiB7XG4gICAgICAgICAgICBzZXJpZXM/LmFwcGx5T3B0aW9ucyh7IHZpc2libGU6IHNob3dNQSB9KTtcbiAgICAgICAgfSk7XG4gICAgfSwgW3Nob3dNQV0pO1xuXG4gICAgLy8gR8OpcmVyIGxhIHZpc2liaWxpdMOpIGRlcyBCb2xsaW5nZXIgQmFuZHNcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBPYmplY3QudmFsdWVzKGJvbGxpbmdlclNlcmllc1JlZnMuY3VycmVudCkuZm9yRWFjaChzZXJpZXMgPT4ge1xuICAgICAgICAgICAgc2VyaWVzPy5hcHBseU9wdGlvbnMoeyB2aXNpYmxlOiBzaG93Qm9sbGluZ2VyIH0pO1xuICAgICAgICB9KTtcbiAgICB9LCBbc2hvd0JvbGxpbmdlciwgc3ltYm9sXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmNvbnRyb2xzQ29udGFpbmVyfT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMudGltZWZyYW1lQ29udGFpbmVyfT5cbiAgICAgICAgICAgICAgICAgICAge09iamVjdC5rZXlzKHRpbWVmcmFtZXMpLm1hcCgodGYsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5zdHlsZXMuYnV0dG9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHNlbGVjdGVkVGltZWZyYW1lID09PSB0ZiA/ICcjZGRkJyA6ICcjZmZmJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNlbGVjdGVkVGltZWZyYW1lKHRmIGFzICcxbScgfCAnNW0nIHwgJzE1bScgfCAnMWgnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGZ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmluZGljYXRvcnNDb250YWluZXJ9PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLnN0eWxlcy5idXR0b24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBzaG93TUEgPyAnI2RkZCcgOiAnI2ZmZicsXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2hvd01BKCFzaG93TUEpfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICBNQVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5zdHlsZXMuYnV0dG9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogc2hvd0JvbGxpbmdlciA/ICcjZGRkJyA6ICcjZmZmJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTaG93Qm9sbGluZ2VyKCFzaG93Qm9sbGluZ2VyKX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgQm9sbGluZ2VyXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IHJlZj17Y2hhcnRDb250YWluZXJSZWZ9IHN0eWxlPXt7IHBvc2l0aW9uOiAncmVsYXRpdmUnLCB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICc0MDBweCcgfX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmNvbnN0IHN0eWxlczogeyBba2V5OiBzdHJpbmddOiBSZWFjdC5DU1NQcm9wZXJ0aWVzIH0gPSB7XG4gICAgY29udHJvbHNDb250YWluZXI6IHtcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgbWFyZ2luQm90dG9tOiAnMTBweCcsXG4gICAgfSxcbiAgICB0aW1lZnJhbWVDb250YWluZXI6IHtcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBnYXA6ICc1cHgnLFxuICAgIH0sXG4gICAgaW5kaWNhdG9yc0NvbnRhaW5lcjoge1xuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGdhcDogJzVweCcsXG4gICAgfSxcbiAgICBidXR0b246IHtcbiAgICAgICAgcGFkZGluZzogJzhweCAxNnB4JyxcbiAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnNXB4JyxcbiAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNkZGQnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENoYXJ0Q29tcG9uZW50OyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlQ29udGV4dCIsImNyZWF0ZUNoYXJ0IiwiQ3J5cHRvQ29udGV4dCIsInRpbWVmcmFtZXMiLCJpbmRpY2F0b3JzIiwiTUEiLCJwZXJpb2RzIiwiY29sb3JzIiwiQm9sbGluZ2VyIiwicGVyaW9kIiwic3RkRGV2IiwiY29sb3IiLCJsYXRlc3RQcmljZSIsImNyeXB0byIsInJlc3VsdCIsImZldGNoIiwiZGF0YSIsImpzb24iLCJvaGxjIiwidGltZSIsIkRhdGUiLCJ0aW1lc3RhbXAiLCJnZXRUaW1lIiwibmV3Q2FuZGxlIiwiaGlzdG9yeVByaWNlIiwidGltZWZyYW1lIiwiaGlzdG9yeSIsIm1hcCIsImNhbmRsZSIsIm9wZW4iLCJoaWdoIiwibG93IiwiY2xvc2UiLCJjYWxjdWxhdGVNQSIsIm1hRGF0YSIsImkiLCJsZW5ndGgiLCJwdXNoIiwidmFsdWUiLCJOYU4iLCJzbGljZSIsInN1bSIsInJlZHVjZSIsImFjYyIsImN1cnIiLCJtYSIsImNhbGN1bGF0ZUJvbGxpbmdlckJhbmRzIiwic3RkRGV2RmFjdG9yIiwiYmFuZHMiLCJtaWRkbGUiLCJ1cHBlciIsImxvd2VyIiwibWVhbiIsInZhcmlhbmNlIiwiTWF0aCIsInBvdyIsInNxcnQiLCJDaGFydENvbXBvbmVudCIsInN5bWJvbCIsImNoYXJ0Q29udGFpbmVyUmVmIiwiY2hhcnRSZWYiLCJzZXJpZXNSZWYiLCJtYVNlcmllc1JlZnMiLCJib2xsaW5nZXJTZXJpZXNSZWZzIiwic2VsZWN0ZWRUaW1lZnJhbWUiLCJzZXRTZWxlY3RlZFRpbWVmcmFtZSIsInNob3dNQSIsInNldFNob3dNQSIsInNob3dCb2xsaW5nZXIiLCJzZXRTaG93Qm9sbGluZ2VyIiwidXBkYXRlQ2FuZGxlIiwibmV3VmFsdWUiLCJtaW4iLCJtYXgiLCJpbml0aWFsaXplQ2hhcnQiLCJoaXN0b3JpY2FsRGF0YSIsImN1cnJlbnQiLCJzZXREYXRhIiwiY29uc29sZSIsImxvZyIsImZvckVhY2giLCJpbmRleCIsImJvbGxpbmdlckRhdGEiLCJ0aW1lU2NhbGUiLCJmaXRDb250ZW50IiwiY291bnQiLCJjdXJyZW50Q3J5cHRvIiwiaW50ZXJ2YWxJZCIsInNldEludGVydmFsIiwibGF0ZXN0Q2FuZGxlIiwiaGlzdG9yaWNhbERhdGEyIiwibGFzdENhbmRsZSIsInVwZGF0ZWRDYW5kbGUiLCJ1cGRhdGUiLCJlcnJvciIsImNsZWFySW50ZXJ2YWwiLCJjaGFydE9wdGlvbnMiLCJsYXlvdXQiLCJ0ZXh0Q29sb3IiLCJiYWNrZ3JvdW5kIiwidHlwZSIsImhlaWdodCIsIndhdGVybWFyayIsInZpc2libGUiLCJjaGFydCIsImNhbmRsZXN0aWNrU2VyaWVzIiwiYWRkQ2FuZGxlc3RpY2tTZXJpZXMiLCJ1cENvbG9yIiwiZG93bkNvbG9yIiwiYm9yZGVyVmlzaWJsZSIsIndpY2tVcENvbG9yIiwid2lja0Rvd25Db2xvciIsImFkZExpbmVTZXJpZXMiLCJsaW5lV2lkdGgiLCJib2xsaW5nZXJVcHBlciIsImxpbmVTdHlsZSIsImJvbGxpbmdlck1pZGRsZSIsImJvbGxpbmdlckxvd2VyIiwicmVtb3ZlIiwic2VyaWVzIiwiYXBwbHlPcHRpb25zIiwiT2JqZWN0IiwidmFsdWVzIiwiZGl2Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250cm9sc0NvbnRhaW5lciIsInRpbWVmcmFtZUNvbnRhaW5lciIsImtleXMiLCJ0ZiIsImJ1dHRvbiIsImJhY2tncm91bmRDb2xvciIsIm9uQ2xpY2siLCJpbmRpY2F0b3JzQ29udGFpbmVyIiwicmVmIiwicG9zaXRpb24iLCJ3aWR0aCIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJtYXJnaW5Cb3R0b20iLCJnYXAiLCJwYWRkaW5nIiwiZm9udFdlaWdodCIsImN1cnNvciIsImJvcmRlclJhZGl1cyIsImJvcmRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Chart.tsx\n"));

/***/ })

});